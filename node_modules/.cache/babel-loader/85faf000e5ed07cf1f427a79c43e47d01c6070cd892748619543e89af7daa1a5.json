{"ast":null,"code":"var _jsxFileName = \"/Users/race/Developer/GitHub/react-auth-spa/src/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport Nav from \"./components/Nav\";\nimport ContactPage from \"./pages/ContactPage\";\nimport { useState } from \"react\";\nimport SignInPage from \"./pages/SignInPage\";\nimport NavAdmin from \"./components/NavAdmin\";\nimport Dashboard from \"./pages/admin/Dashboard\";\nimport ProductsAdminPage from \"./pages/admin/ProductsAdminPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuth\")); // default value comes from localStorage\n\n  // variable holding all private routes including the nav bar\n  const privateRoutes = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavAdmin, {\n      setAuth: setIsAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/products\",\n        element: /*#__PURE__*/_jsxDEV(ProductsAdminPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  // variable holding all public routes without nav bar\n  const publicRoutes = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(SignInPage, {\n          setAuth: setIsAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  // if user is authenticated, show privateRoutes, else show publicRoutes\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: isAuth ? privateRoutes : publicRoutes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"N3nFEZKfsS5FLKpzoI2JJxoq2S0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","Navigate","HomePage","AboutPage","Nav","ContactPage","useState","SignInPage","NavAdmin","Dashboard","ProductsAdminPage","App","isAuth","setIsAuth","localStorage","getItem","privateRoutes","publicRoutes"],"sources":["/Users/race/Developer/GitHub/react-auth-spa/src/App.js"],"sourcesContent":["import { Routes, Route, Navigate } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport Nav from \"./components/Nav\";\nimport ContactPage from \"./pages/ContactPage\";\nimport { useState } from \"react\";\nimport SignInPage from \"./pages/SignInPage\";\nimport NavAdmin from \"./components/NavAdmin\";\nimport Dashboard from \"./pages/admin/Dashboard\";\nimport ProductsAdminPage from \"./pages/admin/ProductsAdminPage\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(localStorage.getItem(\"isAuth\")); // default value comes from localStorage\n\n    // variable holding all private routes including the nav bar\n    const privateRoutes = (\n        <>\n            <NavAdmin setAuth={setIsAuth} />\n\n            <Routes>\n                <Route path=\"/admin\" element={<Dashboard />} />\n                <Route exact path=\"/admin/products\" element={<ProductsAdminPage />} />\n                <Route path=\"*\" element={<Navigate to=\"/admin\" />} />\n            </Routes>\n        </>\n    );\n\n    // variable holding all public routes without nav bar\n    const publicRoutes = (\n        <>\n            <Nav />\n\n            <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                <Route path=\"/about\" element={<AboutPage />} />\n                <Route path=\"/contact\" element={<ContactPage />} />\n                <Route path=\"/sign-in\" element={<SignInPage setAuth={setIsAuth} />} />\n\n                <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Routes>\n        </>\n    );\n\n    // if user is authenticated, show privateRoutes, else show publicRoutes\n    return <main>{isAuth ? privateRoutes : publicRoutes}</main>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC;AAAA;AAEhE,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtE;EACA,MAAMC,aAAa,gBACf;IAAA,wBACI,QAAC,QAAQ;MAAC,OAAO,EAAEH;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAEhC,QAAC,MAAM;MAAA,wBACH,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C,QAAC,KAAK;QAAC,KAAK;QAAC,IAAI,EAAC,iBAAiB;QAAC,OAAO,eAAE,QAAC,iBAAiB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACtE,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAC,EAAE,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD;EAAA,gBAEhB;;EAED;EACA,MAAMI,YAAY,gBACd;IAAA,wBACI,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAEP,QAAC,MAAM;MAAA,wBACH,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACzC,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C,QAAC,KAAK;QAAC,IAAI,EAAC,UAAU;QAAC,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD,QAAC,KAAK;QAAC,IAAI,EAAC,UAAU;QAAC,OAAO,eAAE,QAAC,UAAU;UAAC,OAAO,EAAEJ;QAAU;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAEtE,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAC,EAAE,EAAC;QAAG;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA,gBAEhB;;EAED;EACA,oBAAO;IAAA,UAAOD,MAAM,GAAGI,aAAa,GAAGC;EAAY;IAAA;IAAA;IAAA;EAAA,QAAQ;AAC/D;AAAC,GAlCQN,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}